@model AllBooksQueryModel

@{
    ViewBag.Title = "All Book";
    
}

<div class="row justify-content-between" id="search">
    <form method="get" class="form-inline" style="grid-column-gap: 180px;">
        <div class="form-group" style="margin-left:15px;">
            <input asp-for="SearchTerms" class="form-control mr-sm-2 shadow-sm" type="text" placeholder="Search" aria-label="Search">
        </div>
        <div class="form-group">
            <label asp-for="Category" style="margin-right:10px; text-shadow: 1px 1px 3px #eeeeee;"></label>
            <select asp-for="Category" class="form-control shadow-sm">
                <option value="">All</option>
                @foreach (var category in Model.Categories)
                {
                    <option value="@category">@category</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label asp-for="Sorting" style="margin-right:10px; text-shadow: 1px 1px 3px #eeeeee;"></label>
            <select asp-for="Sorting" class="form-control shadow-sm">
                <option value="0" selected>Date created</option>
                <option value="1">Title</option>
                <option value="2">Author</option>
                <option value="3">Publisher</option>
                <option value="4">Price (low to high)</option>
                <option value="5">Price (high to low)</option>

            </select>
        </div>


    </form>
</div>

@if (!Model.Books.Any())
{
    <h3>No books found!</h3>
}
<partial name="_BooksPartial" model="@Model.Books" />

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var counPages = Math.Ceiling((decimal)Model.CountBooks / AllBooksQueryModel.booksPerPage);
}
<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty) ">
            <a asp-controller="Books"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-sorting="@((int)Model.Sorting)"
               class="page-link">Previous</a>
        </li>
        @for (int i = 1; i < counPages + 1; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : string.Empty)">
                <a class="page-link"
                   asp-route-currentPage="@i"
                   asp-route-category="@Model.Category"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-sorting="@((int)Model.Sorting)">
                    @i
                    <span class="sr-only">@(i == Model.CurrentPage ? "(current)" : string.Empty)</span>
                </a>
            </li>
        }
        <li class="page-item @(((int)counPages == Model.CurrentPage) ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Books"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage +1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-sorting="@((int)Model.Sorting)">
                Next
            </a>
        </li>
    </ul>
</nav>



